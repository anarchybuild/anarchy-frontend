import type { StoryObj } from "@storybook/react";
import type { Theme } from "../../react/core/design-system/index.js";
interface ErrorBannerWithThemeProps {
    error: Error;
    onRetry: () => void;
    onCancel?: () => void;
    theme: "light" | "dark" | Theme;
}
declare const meta: {
    title: string;
    component: (props: ErrorBannerWithThemeProps) => import("react/jsx-runtime").JSX.Element;
    parameters: {
        layout: string;
        docs: {
            description: {
                component: string;
            };
        };
    };
    tags: string[];
    args: {
        error: Error;
        onRetry: () => void;
        onCancel: () => void;
        theme: "dark";
    };
    argTypes: {
        theme: {
            control: "select";
            options: string[];
            description: string;
        };
        onRetry: {
            action: string;
        };
        onCancel: {
            action: string;
        };
    };
};
export default meta;
type Story = StoryObj<typeof meta>;
export declare const Light: Story;
export declare const Dark: Story;
export declare const NetworkError: Story;
export declare const NetworkErrorLight: Story;
export declare const UserRejectedError: Story;
export declare const UserRejectedErrorLight: Story;
export declare const InsufficientFundsError: Story;
export declare const InsufficientFundsErrorLight: Story;
export declare const WithoutCancelButton: Story;
export declare const WithoutCancelButtonLight: Story;
export declare const EmptyMessage: Story;
export declare const EmptyMessageLight: Story;
//# sourceMappingURL=ErrorBanner.stories.d.ts.map