import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { CustomThemeProvider } from "../react/core/design-system/CustomThemeProvider.js";
import { WalletRow } from "../react/web/ui/ConnectWallet/screens/Buy/swap/WalletRow.js";
import { storyClient } from "./utils.js";
// Wrapper component to provide theme context
const WalletRowWithTheme = (props) => {
    const { theme, ...walletRowProps } = props;
    return (_jsx(CustomThemeProvider, { theme: theme, children: _jsx(WalletRow, { ...walletRowProps }) }));
};
const meta = {
    title: "Connect/WalletRow",
    component: WalletRowWithTheme,
    parameters: {
        layout: "centered",
        docs: {
            description: {
                component: "A reusable component that displays wallet information including address, wallet type, and optional ENS name or email.",
            },
        },
    },
    tags: ["autodocs"],
    args: {
        client: storyClient,
        address: "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045", // Vitalik's address for ENS demo
        theme: "dark",
    },
    argTypes: {
        theme: {
            control: "select",
            options: ["light", "dark"],
            description: "Theme for the component",
        },
        iconSize: {
            control: "select",
            options: ["xs", "sm", "md", "lg", "xl"],
            description: "Size of the wallet icon",
        },
        textSize: {
            control: "select",
            options: ["xs", "sm", "md", "lg", "xl"],
            description: "Size of the main address text",
        },
        label: {
            control: "text",
            description: "Optional label to display above the address",
        },
        address: {
            control: "text",
            description: "Wallet address to display",
        },
    },
};
export const Light = {
    args: {
        theme: "light",
    },
    parameters: {
        backgrounds: { default: "light" },
    },
};
export const Dark = {
    args: {
        theme: "dark",
    },
    parameters: {
        backgrounds: { default: "dark" },
    },
};
export const WithLabel = {
    args: {
        theme: "dark",
        label: "Recipient Wallet",
        address: "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
    },
    parameters: {
        backgrounds: { default: "dark" },
    },
};
export const LargeSize = {
    args: {
        theme: "light",
        iconSize: "lg",
        textSize: "md",
        label: "Primary Wallet",
        address: "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
    },
    parameters: {
        backgrounds: { default: "light" },
    },
};
export const SmallSize = {
    args: {
        theme: "dark",
        iconSize: "sm",
        textSize: "xs",
        address: "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
    },
    parameters: {
        backgrounds: { default: "dark" },
    },
};
export const DifferentAddresses = {
    render: (args) => (_jsx(CustomThemeProvider, { theme: args.theme, children: _jsxs("div", { style: {
                display: "flex",
                flexDirection: "column",
                gap: "16px",
                minWidth: "300px",
            }, children: [_jsx(WalletRow, { client: args.client, address: "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045", label: "ENS Example (vitalik.eth)" }), _jsx(WalletRow, { client: args.client, address: "0x4fA9230f4E8978462cE7Bf8e6b5a2588da5F4264", label: "Regular Address" }), _jsx(WalletRow, { client: args.client, address: "0x4fA9230f4E8978462cE7Bf8e6b5a2588da5F4264", label: "Short Address" })] }) })),
    args: {
        theme: "dark",
    },
    parameters: {
        backgrounds: { default: "dark" },
    },
};
export default meta;
//# sourceMappingURL=WalletRow.stories.js.map