import { useQueries } from "@tanstack/react-query";
import { prepare as prepareOnramp } from "../../../../bridge/Onramp.js";
import { getToken } from "../../../../pay/convert/get-token.js";
import { toUnits } from "../../../../utils/units.js";
/**
 * @internal
 * Hook to get prepared onramp quotes from Coinbase, Stripe, and Transak providers.
 */
export function useBuyWithFiatQuotesForProviders(params, queryOptions) {
    const providers = ["coinbase", "stripe", "transak"];
    const queries = useQueries({
        queries: providers.map((provider) => ({
            ...queryOptions,
            queryKey: ["onramp-prepare", provider, params],
            queryFn: async () => {
                if (!params) {
                    throw new Error("No params provided");
                }
                const token = await getToken(params.client, params.tokenAddress, params.chainId);
                const amountWei = toUnits(params.amount, token.decimals);
                return prepareOnramp({
                    client: params.client,
                    onramp: provider,
                    chainId: params.chainId,
                    tokenAddress: params.tokenAddress,
                    receiver: params.receiver,
                    amount: amountWei,
                    currency: params.currency || "USD",
                });
            },
            enabled: !!params,
            retry: false,
        })),
    });
    return queries;
}
//# sourceMappingURL=useBuyWithFiatQuotesForProviders.js.map