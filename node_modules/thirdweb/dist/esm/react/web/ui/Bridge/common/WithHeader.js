import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { resolveScheme } from "../../../../../utils/ipfs.js";
import { useCustomTheme } from "../../../../core/design-system/CustomThemeProvider.js";
import { radius } from "../../../../core/design-system/index.js";
import { Spacer } from "../../components/Spacer.js";
import { Container } from "../../components/basic.js";
import { Text } from "../../components/text.js";
export function WithHeader({ children, uiOptions, defaultTitle, client, }) {
    const theme = useCustomTheme();
    return (_jsxs(Container, { flex: "column", children: [uiOptions.metadata?.image && (_jsx("div", { style: {
                    width: "100%",
                    borderRadius: `${radius.md} ${radius.md} 0 0`,
                    overflow: "hidden",
                    aspectRatio: "16/9",
                    backgroundColor: theme.colors.tertiaryBg,
                    backgroundImage: `url(${resolveScheme({
                        client,
                        uri: uiOptions.metadata.image,
                    })})`,
                    backgroundSize: "cover",
                    backgroundPosition: "center",
                } })), _jsxs(Container, { flex: "column", px: "lg", children: [_jsx(Spacer, { y: "lg" }), _jsx(Text, { size: "lg", color: "primaryText", weight: 700, children: uiOptions.metadata?.title || defaultTitle }), uiOptions.metadata?.description && (_jsxs(_Fragment, { children: [_jsx(Spacer, { y: "xs" }), _jsx(Text, { size: "sm", color: "secondaryText", children: uiOptions.metadata?.description })] })), _jsx(Spacer, { y: "lg" }), children] })] }));
}
//# sourceMappingURL=WithHeader.js.map