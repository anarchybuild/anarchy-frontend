"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionContractInteractionLight = exports.TransactionContractInteraction = exports.TransactionERC20TransferLight = exports.TransactionERC20Transfer = exports.TransactionEthTransferLight = exports.TransactionEthTransfer = exports.BuyComplexLight = exports.BuyComplex = exports.BuyWithApprovalLight = exports.BuyWithApproval = exports.BuyWithLongText = exports.BuySimpleLightDirectPayment = exports.BuySimpleDirectPayment = exports.BuySimpleLight = exports.BuySimple = exports.OnrampWithSwapsLight = exports.OnrampWithSwaps = exports.OnrampSimpleLightDirectPayment = exports.OnrampSimpleDirectPayment = exports.OnrampSimpleLight = exports.OnrampSimple = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const PaymentDetails_js_1 = require("../../react/web/ui/Bridge/payment-details/PaymentDetails.js");
const json_js_1 = require("../../utils/json.js");
const utils_js_1 = require("../utils.js");
const fixtures_js_1 = require("./fixtures.js");
const fiatPaymentMethod = {
    type: "fiat",
    currency: "USD",
    onramp: "coinbase",
    payerWallet: fixtures_js_1.STORY_MOCK_WALLET,
};
const cryptoPaymentMethod = JSON.parse((0, json_js_1.stringify)({
    type: "wallet",
    payerWallet: fixtures_js_1.STORY_MOCK_WALLET,
    balance: 100000000n,
    originToken: {
        chainId: 1,
        address: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        name: "USD Coin",
        symbol: "USDC",
        decimals: 6,
        priceUsd: 1.0,
        iconUri: "https://assets.coingecko.com/coins/images/6319/large/USD_Coin_icon.png",
    },
}));
const ethCryptoPaymentMethod = JSON.parse((0, json_js_1.stringify)({
    type: "wallet",
    payerWallet: fixtures_js_1.STORY_MOCK_WALLET,
    balance: 1000000000000000000n,
    originToken: {
        chainId: 1,
        address: "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",
        name: "Ethereum",
        symbol: "ETH",
        decimals: 18,
        priceUsd: 2500.0,
        iconUri: "https://assets.coingecko.com/coins/images/6319/large/USD_Coin_icon.png",
    },
}));
// Wrapper component to provide theme context
const PaymentDetailsWithTheme = (props) => {
    const { theme, ...componentProps } = props;
    return ((0, jsx_runtime_1.jsx)(utils_js_1.ModalThemeWrapper, { theme: theme, children: (0, jsx_runtime_1.jsx)(PaymentDetails_js_1.PaymentDetails, { ...componentProps }) }));
};
const meta = {
    title: "Bridge/PaymentDetails",
    component: PaymentDetailsWithTheme,
    parameters: {
        layout: "centered",
        docs: {
            description: {
                component: "Route preview screen that displays prepared quote details, fees, estimated time, and transaction steps for user confirmation.",
            },
        },
    },
    tags: ["autodocs"],
    args: {
        preparedQuote: fixtures_js_1.simpleOnrampQuote,
        onConfirm: () => { },
        onBack: () => { },
        onError: (error) => console.error("Error:", error),
        theme: "dark",
        uiOptions: {
            mode: "fund_wallet",
            destinationToken: fixtures_js_1.USDC,
        },
    },
    argTypes: {
        theme: {
            control: "select",
            options: ["light", "dark"],
            description: "Theme for the component",
        },
        onConfirm: { action: "route confirmed" },
        onBack: { action: "back clicked" },
        onError: { action: "error occurred" },
    },
};
exports.default = meta;
exports.OnrampSimple = {
    args: {
        theme: "dark",
        preparedQuote: fixtures_js_1.simpleOnrampQuote,
        paymentMethod: fiatPaymentMethod,
        client: utils_js_1.storyClient,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Simple onramp quote with no extra steps - direct fiat to crypto.",
            },
        },
    },
};
exports.OnrampSimpleLight = {
    args: {
        theme: "light",
        preparedQuote: fixtures_js_1.simpleOnrampQuote,
        paymentMethod: fiatPaymentMethod,
        client: utils_js_1.storyClient,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Simple onramp quote with no extra steps (light theme).",
            },
        },
    },
};
exports.OnrampSimpleDirectPayment = {
    args: {
        theme: "dark",
        preparedQuote: fixtures_js_1.simpleOnrampQuote,
        paymentMethod: fiatPaymentMethod,
        client: utils_js_1.storyClient,
        uiOptions: fixtures_js_1.DIRECT_PAYMENT_UI_OPTIONS.credits,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Simple onramp quote with no extra steps - direct fiat to crypto.",
            },
        },
    },
};
exports.OnrampSimpleLightDirectPayment = {
    args: {
        theme: "light",
        preparedQuote: fixtures_js_1.simpleOnrampQuote,
        paymentMethod: fiatPaymentMethod,
        client: utils_js_1.storyClient,
        uiOptions: fixtures_js_1.DIRECT_PAYMENT_UI_OPTIONS.concertTicket,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Simple onramp quote with no extra steps (light theme).",
            },
        },
    },
};
exports.OnrampWithSwaps = {
    args: {
        theme: "dark",
        preparedQuote: fixtures_js_1.onrampWithSwapsQuote,
        paymentMethod: fiatPaymentMethod,
        client: utils_js_1.storyClient,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Onramp quote with 2 additional swap steps after the fiat purchase.",
            },
        },
    },
};
exports.OnrampWithSwapsLight = {
    args: {
        theme: "light",
        preparedQuote: fixtures_js_1.onrampWithSwapsQuote,
        paymentMethod: fiatPaymentMethod,
        client: utils_js_1.storyClient,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Onramp quote with 2 additional swap steps (light theme).",
            },
        },
    },
};
exports.BuySimple = {
    args: {
        theme: "dark",
        preparedQuote: fixtures_js_1.simpleBuyQuote,
        paymentMethod: ethCryptoPaymentMethod,
        client: utils_js_1.storyClient,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Simple buy quote with a single transaction (no approval needed).",
            },
        },
    },
};
exports.BuySimpleLight = {
    args: {
        theme: "light",
        preparedQuote: fixtures_js_1.simpleBuyQuote,
        paymentMethod: ethCryptoPaymentMethod,
        client: utils_js_1.storyClient,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Simple buy quote with a single transaction (light theme).",
            },
        },
    },
};
exports.BuySimpleDirectPayment = {
    args: {
        theme: "dark",
        preparedQuote: fixtures_js_1.simpleBuyQuote,
        paymentMethod: ethCryptoPaymentMethod,
        client: utils_js_1.storyClient,
        uiOptions: fixtures_js_1.DIRECT_PAYMENT_UI_OPTIONS.digitalArt,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Simple buy quote with a single transaction (no approval needed).",
            },
        },
    },
};
exports.BuySimpleLightDirectPayment = {
    args: {
        theme: "light",
        preparedQuote: fixtures_js_1.simpleBuyQuote,
        paymentMethod: ethCryptoPaymentMethod,
        client: utils_js_1.storyClient,
        uiOptions: fixtures_js_1.DIRECT_PAYMENT_UI_OPTIONS.subscription,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Simple buy quote with a single transaction (light theme).",
            },
        },
    },
};
exports.BuyWithLongText = {
    args: {
        theme: "dark",
        preparedQuote: fixtures_js_1.longTextBuyQuote,
        paymentMethod: ethCryptoPaymentMethod,
        client: utils_js_1.storyClient,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Simple buy quote with a single transaction (light theme).",
            },
        },
    },
};
exports.BuyWithApproval = {
    args: {
        theme: "dark",
        preparedQuote: fixtures_js_1.buyWithApprovalQuote,
        paymentMethod: cryptoPaymentMethod,
        client: utils_js_1.storyClient,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Buy quote requiring both approval and buy transactions in a single step.",
            },
        },
    },
};
exports.BuyWithApprovalLight = {
    args: {
        theme: "light",
        preparedQuote: fixtures_js_1.buyWithApprovalQuote,
        paymentMethod: cryptoPaymentMethod,
        client: utils_js_1.storyClient,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Buy quote with approval and buy transactions (light theme).",
            },
        },
    },
};
exports.BuyComplex = {
    args: {
        theme: "dark",
        preparedQuote: fixtures_js_1.complexBuyQuote,
        paymentMethod: ethCryptoPaymentMethod,
        client: utils_js_1.storyClient,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Complex buy quote with 3 steps, each requiring approval and execution transactions across multiple chains.",
            },
        },
    },
};
exports.BuyComplexLight = {
    args: {
        theme: "light",
        preparedQuote: fixtures_js_1.complexBuyQuote,
        paymentMethod: ethCryptoPaymentMethod,
        client: utils_js_1.storyClient,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Complex multi-step buy quote spanning multiple chains (light theme).",
            },
        },
    },
};
// ========== TRANSACTION MODE STORIES ========== //
exports.TransactionEthTransfer = {
    args: {
        theme: "dark",
        preparedQuote: fixtures_js_1.simpleBuyQuote,
        paymentMethod: ethCryptoPaymentMethod,
        client: utils_js_1.storyClient,
        uiOptions: fixtures_js_1.TRANSACTION_UI_OPTIONS.ethTransfer,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Transaction mode showing ETH transfer payment details with function name and contract information displayed in the PaymentDetails screen.",
            },
        },
    },
};
exports.TransactionEthTransferLight = {
    args: {
        theme: "light",
        preparedQuote: fixtures_js_1.simpleBuyQuote,
        paymentMethod: ethCryptoPaymentMethod,
        client: utils_js_1.storyClient,
        uiOptions: fixtures_js_1.TRANSACTION_UI_OPTIONS.ethTransfer,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Light theme version of transaction mode for ETH transfer with detailed payment overview.",
            },
        },
    },
};
exports.TransactionERC20Transfer = {
    args: {
        theme: "dark",
        preparedQuote: fixtures_js_1.simpleBuyQuote,
        paymentMethod: cryptoPaymentMethod,
        client: utils_js_1.storyClient,
        uiOptions: fixtures_js_1.TRANSACTION_UI_OPTIONS.erc20Transfer,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Transaction mode for ERC20 token transfer showing token details and transfer function in payment preview.",
            },
        },
    },
};
exports.TransactionERC20TransferLight = {
    args: {
        theme: "light",
        preparedQuote: fixtures_js_1.simpleBuyQuote,
        paymentMethod: cryptoPaymentMethod,
        client: utils_js_1.storyClient,
        uiOptions: fixtures_js_1.TRANSACTION_UI_OPTIONS.erc20Transfer,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Light theme version of ERC20 token transfer transaction mode with payment details.",
            },
        },
    },
};
exports.TransactionContractInteraction = {
    args: {
        theme: "dark",
        preparedQuote: fixtures_js_1.simpleBuyQuote,
        paymentMethod: ethCryptoPaymentMethod,
        client: utils_js_1.storyClient,
        uiOptions: fixtures_js_1.TRANSACTION_UI_OPTIONS.contractInteraction,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Transaction mode for complex contract interaction (claimTo function) showing detailed contract information and function details in payment preview.",
            },
        },
    },
};
exports.TransactionContractInteractionLight = {
    args: {
        theme: "light",
        preparedQuote: fixtures_js_1.simpleBuyQuote,
        paymentMethod: ethCryptoPaymentMethod,
        client: utils_js_1.storyClient,
        uiOptions: fixtures_js_1.TRANSACTION_UI_OPTIONS.contractInteraction,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Light theme version of contract interaction transaction mode with comprehensive payment details.",
            },
        },
    },
};
//# sourceMappingURL=PaymentDetails.stories.js.map