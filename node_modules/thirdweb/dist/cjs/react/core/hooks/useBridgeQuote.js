"use strict";
"use client";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useBridgeQuote = useBridgeQuote;
const react_query_1 = require("@tanstack/react-query");
const Buy = require("../../../bridge/Buy.js");
const Transfer = require("../../../bridge/Transfer.js");
const address_js_1 = require("../../../utils/address.js");
function useBridgeQuote({ originToken, destinationToken, destinationAmount, client, enabled = true, }) {
    return (0, react_query_1.useQuery)({
        queryKey: [
            "bridge-quote",
            originToken.chainId,
            originToken.address,
            destinationToken.chainId,
            destinationToken.address,
            destinationAmount.toString(),
        ],
        queryFn: async () => {
            // if ssame token and chain, use transfer
            if ((0, address_js_1.checksumAddress)(originToken.address) ===
                (0, address_js_1.checksumAddress)(destinationToken.address) &&
                originToken.chainId === destinationToken.chainId) {
                const transfer = await Transfer.prepare({
                    client,
                    chainId: originToken.chainId,
                    tokenAddress: originToken.address,
                    sender: originToken.address,
                    receiver: destinationToken.address,
                    amount: destinationAmount,
                });
                return transfer;
            }
            const quote = await Buy.quote({
                originChainId: originToken.chainId,
                originTokenAddress: originToken.address,
                destinationChainId: destinationToken.chainId,
                destinationTokenAddress: destinationToken.address,
                amount: destinationAmount,
                client,
            });
            return quote;
        },
        enabled: enabled && !!originToken && !!destinationToken && !!destinationAmount,
        staleTime: 30000, // 30 seconds
        refetchInterval: 60000, // 1 minute
        retry: 3,
    });
}
//# sourceMappingURL=useBridgeQuote.js.map