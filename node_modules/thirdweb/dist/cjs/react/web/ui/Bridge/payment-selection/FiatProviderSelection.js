"use strict";
"use client";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FiatProviderSelection = FiatProviderSelection;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const address_js_1 = require("../../../../../utils/address.js");
const units_js_1 = require("../../../../../utils/units.js");
const CustomThemeProvider_js_1 = require("../../../../core/design-system/CustomThemeProvider.js");
const index_js_1 = require("../../../../core/design-system/index.js");
const useBuyWithFiatQuotesForProviders_js_1 = require("../../../../core/hooks/pay/useBuyWithFiatQuotesForProviders.js");
const Img_js_1 = require("../../components/Img.js");
const Spacer_js_1 = require("../../components/Spacer.js");
const Spinner_js_1 = require("../../components/Spinner.js");
const basic_js_1 = require("../../components/basic.js");
const buttons_js_1 = require("../../components/buttons.js");
const text_js_1 = require("../../components/text.js");
const PROVIDERS = [
    {
        id: "coinbase",
        name: "Coinbase",
        description: "Fast and secure payments",
        iconUri: "https://i.ibb.co/LDJ3Rk2t/Frame-5.png",
    },
    {
        id: "stripe",
        name: "Stripe",
        description: "Trusted payment processing",
        iconUri: "https://i.ibb.co/CpgQC2Lf/images-3.png",
    },
    {
        id: "transak",
        name: "Transak",
        description: "Global payment solution",
        iconUri: "https://i.ibb.co/Xx2r882p/Transak-official-symbol-1.png",
    },
];
function FiatProviderSelection({ onProviderSelected, client, toChainId, toTokenAddress, toAddress, toAmount, }) {
    const theme = (0, CustomThemeProvider_js_1.useCustomTheme)();
    // Fetch quotes for all providers
    const quoteQueries = (0, useBuyWithFiatQuotesForProviders_js_1.useBuyWithFiatQuotesForProviders)({
        client,
        chainId: toChainId,
        tokenAddress: (0, address_js_1.checksumAddress)(toTokenAddress),
        receiver: (0, address_js_1.checksumAddress)(toAddress),
        amount: toAmount || "0",
        currency: "USD",
    });
    const quotes = (0, react_1.useMemo)(() => {
        return quoteQueries.map((q) => q.data).filter((q) => !!q);
    }, [quoteQueries]);
    // TODO: add a "remember my choice" checkbox
    return ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: (0, jsx_runtime_1.jsx)(basic_js_1.Container, { flex: "column", gap: "sm", children: quotes.length > 0 ? (quotes
                .sort((a, b) => a.currencyAmount - b.currencyAmount)
                .map((quote, index) => {
                const provider = PROVIDERS.find((p) => p.id === quote.intent.onramp);
                if (!provider) {
                    return null;
                }
                return ((0, jsx_runtime_1.jsx)(basic_js_1.Container, { animate: "fadein", style: {
                        animationDelay: `${index * 100}ms`,
                    }, children: (0, jsx_runtime_1.jsx)(buttons_js_1.Button, { variant: "secondary", fullWidth: true, onClick: () => onProviderSelected(provider.id), style: {
                            border: `1px solid ${theme.colors.borderColor}`,
                            borderRadius: index_js_1.radius.md,
                            padding: `${index_js_1.spacing.sm} ${index_js_1.spacing.md}`,
                            backgroundColor: theme.colors.tertiaryBg,
                            textAlign: "left",
                        }, children: (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "row", gap: "sm", style: { width: "100%", alignItems: "center" }, children: [(0, jsx_runtime_1.jsx)(basic_js_1.Container, { style: {
                                        width: `${index_js_1.iconSize.md}px`,
                                        height: `${index_js_1.iconSize.md}px`,
                                        borderRadius: "50%",
                                        display: "flex",
                                        alignItems: "center",
                                        justifyContent: "center",
                                        padding: index_js_1.spacing.xs,
                                        overflow: "hidden",
                                    }, children: (0, jsx_runtime_1.jsx)(Img_js_1.Img, { src: provider.iconUri, alt: provider.name, width: index_js_1.iconSize.md, height: index_js_1.iconSize.md, client: client }) }), (0, jsx_runtime_1.jsx)(basic_js_1.Container, { flex: "column", gap: "3xs", style: { flex: 1 }, children: (0, jsx_runtime_1.jsx)(text_js_1.Text, { size: "md", color: "primaryText", style: { fontWeight: 600 }, children: provider.name }) }), (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "column", gap: "3xs", style: { alignItems: "flex-end" }, children: [(0, jsx_runtime_1.jsxs)(text_js_1.Text, { size: "sm", color: "primaryText", style: { fontWeight: 500 }, children: ["$", quote.currencyAmount.toLocaleString(undefined, {
                                                    minimumFractionDigits: 2,
                                                    maximumFractionDigits: 2,
                                                }), " ", quote.currency] }), (0, jsx_runtime_1.jsxs)(text_js_1.Text, { size: "xs", color: "secondaryText", children: [(0, units_js_1.toTokens)(quote.destinationAmount, quote.destinationToken.decimals), " ", quote.destinationToken.symbol] })] })] }) }) }, provider.id));
            })) : ((0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "column", center: "both", style: { minHeight: "120px" }, children: [(0, jsx_runtime_1.jsx)(Spinner_js_1.Spinner, { size: "lg", color: "secondaryText" }), (0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "sm" }), (0, jsx_runtime_1.jsx)(text_js_1.Text, { size: "sm", color: "secondaryText", center: true, children: "Generating quotes..." })] })) }) }));
}
//# sourceMappingURL=FiatProviderSelection.js.map