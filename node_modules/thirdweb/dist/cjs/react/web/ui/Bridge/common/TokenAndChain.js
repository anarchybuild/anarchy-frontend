"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChainIcon = void 0;
exports.TokenAndChain = TokenAndChain;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const utils_js_1 = require("../../../../../chains/utils.js");
const addresses_js_1 = require("../../../../../constants/addresses.js");
const ipfs_js_1 = require("../../../../../utils/ipfs.js");
const CustomThemeProvider_js_1 = require("../../../../core/design-system/CustomThemeProvider.js");
const index_js_1 = require("../../../../core/design-system/index.js");
const useChainQuery_js_1 = require("../../../../core/hooks/others/useChainQuery.js");
const walletIcon_js_1 = require("../../../../core/utils/walletIcon.js");
const nativeToken_js_1 = require("../../ConnectWallet/screens/nativeToken.js");
const ChainName_js_1 = require("../../components/ChainName.js");
const Img_js_1 = require("../../components/Img.js");
const basic_js_1 = require("../../components/basic.js");
const fallbackChainIcon_js_1 = require("../../components/fallbackChainIcon.js");
const text_js_1 = require("../../components/text.js");
function TokenAndChain({ token, client, size, style, }) {
    const theme = (0, CustomThemeProvider_js_1.useCustomTheme)();
    const chain = (0, utils_js_1.getCachedChain)(token.chainId);
    return ((0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "row", center: "y", gap: "sm", style: {
            flexWrap: "nowrap",
            ...style,
        }, children: [(0, jsx_runtime_1.jsxs)(basic_js_1.Container, { style: {
                    position: "relative",
                    width: index_js_1.iconSize[size],
                    height: index_js_1.iconSize[size],
                }, children: [(0, jsx_runtime_1.jsx)(TokenIconWithFallback, { token: token, size: size, client: client }), chain.id !== 1 && ((0, jsx_runtime_1.jsx)(basic_js_1.Container, { style: {
                            position: "absolute",
                            bottom: "-2px",
                            right: "-6px",
                            width: size === "lg" || size === "xl" ? index_js_1.iconSize.sm : index_js_1.iconSize.xs,
                            height: size === "lg" || size === "xl" ? index_js_1.iconSize.sm : index_js_1.iconSize.xs,
                            borderRadius: "50%",
                            background: theme.colors.borderColor,
                            border: `1.5px solid ${theme.colors.modalBg}`,
                        }, children: (0, jsx_runtime_1.jsx)(exports.ChainIcon, { chain: chain, size: size === "xl" || size === "lg" ? "sm" : "xs", client: client }) }))] }), (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "column", gap: "3xs", style: { minWidth: 0 }, children: [(0, jsx_runtime_1.jsx)(text_js_1.Text, { size: size === "xl" ? "lg" : "sm", color: "primaryText", weight: 600, style: {
                            overflow: "hidden",
                            textOverflow: "ellipsis",
                            whiteSpace: "nowrap",
                        }, children: token.name }), (0, jsx_runtime_1.jsx)(ChainName_js_1.ChainName, { chain: chain, size: size === "xl" ? "sm" : "xs", client: client, short: true })] })] }));
}
function TokenIconWithFallback(props) {
    const chain = (0, utils_js_1.getCachedChain)(props.token.chainId);
    const chainMeta = (0, useChainQuery_js_1.useChainMetadata)(chain).data;
    const theme = (0, CustomThemeProvider_js_1.useCustomTheme)();
    const tokenImage = (0, react_1.useMemo)(() => {
        if ((0, nativeToken_js_1.isNativeToken)(props.token) ||
            props.token.address === addresses_js_1.NATIVE_TOKEN_ADDRESS) {
            if (chainMeta?.nativeCurrency.symbol === "ETH") {
                return "ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/ethereum/512.png"; // ETH icon
            }
            return chainMeta?.icon?.url;
        }
        return props.token.iconUri;
    }, [props.token, chainMeta?.icon?.url, chainMeta?.nativeCurrency.symbol]);
    return tokenImage ? ((0, jsx_runtime_1.jsx)(Img_js_1.Img, { src: tokenImage, style: {
            borderRadius: "50%",
        }, width: index_js_1.iconSize[props.size], height: index_js_1.iconSize[props.size], fallbackImage: walletIcon_js_1.genericTokenIcon, client: props.client })) : ((0, jsx_runtime_1.jsx)(basic_js_1.Container, { style: {
            width: `${index_js_1.iconSize.md}px`,
            height: `${index_js_1.iconSize.md}px`,
            borderRadius: "50%",
            backgroundColor: theme.colors.secondaryButtonBg,
            border: `1px solid ${theme.colors.borderColor}`,
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            padding: index_js_1.spacing.xs,
        }, children: (0, jsx_runtime_1.jsx)(text_js_1.Text, { size: props.size === "xl" ? "sm" : "xs", color: "secondaryText", style: { fontWeight: 600 }, children: props.token.symbol.slice(0, 1) }) }));
}
const ChainIcon = (props) => {
    const { url } = (0, useChainQuery_js_1.useChainIconUrl)(props.chain);
    return ((0, jsx_runtime_1.jsx)(basic_js_1.Container, { style: {
            position: "relative",
            display: "flex",
            flexShrink: 0,
            alignItems: "center",
        }, children: (0, jsx_runtime_1.jsx)(Img_js_1.Img, { src: getSrcChainIcon({
                client: props.client,
                chainIconUrl: url,
            }), width: index_js_1.iconSize[props.size], height: index_js_1.iconSize[props.size], fallbackImage: fallbackChainIcon_js_1.fallbackChainIcon, client: props.client }) }));
};
exports.ChainIcon = ChainIcon;
const getSrcChainIcon = (props) => {
    const url = props.chainIconUrl;
    if (!url) {
        return fallbackChainIcon_js_1.fallbackChainIcon;
    }
    try {
        return (0, ipfs_js_1.resolveScheme)({
            uri: url,
            client: props.client,
        });
    }
    catch {
        return fallbackChainIcon_js_1.fallbackChainIcon;
    }
};
//# sourceMappingURL=TokenAndChain.js.map